//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSDataUser
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/WS.Unit06.User.Data.Model")]
    public partial class Users : object
    {
        
        private string EmailField;
        
        private int IdField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.unit06.user/data/", ConfigurationName="WSDataUser.IDataServices")]
    public interface IDataServices
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/GetUsers", ReplyAction="http://ws.unit06.user/data/IDataServices/GetUsersResponse")]
        System.Threading.Tasks.Task<WSDataUser.Users[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/GetOneUser", ReplyAction="http://ws.unit06.user/data/IDataServices/GetOneUserResponse")]
        System.Threading.Tasks.Task<WSDataUser.Users> GetOneUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/CreateUser", ReplyAction="http://ws.unit06.user/data/IDataServices/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(WSDataUser.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/UpdateUser", ReplyAction="http://ws.unit06.user/data/IDataServices/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(WSDataUser.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/GetUserById", ReplyAction="http://ws.unit06.user/data/IDataServices/GetUserByIdResponse")]
        System.Threading.Tasks.Task<WSDataUser.Users> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/GetUserByNameAndPassowrd", ReplyAction="http://ws.unit06.user/data/IDataServices/GetUserByNameAndPassowrdResponse")]
        System.Threading.Tasks.Task<WSDataUser.Users> GetUserByNameAndPassowrdAsync(string name, string passowrd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.unit06.user/data/IDataServices/DeleteUser", ReplyAction="http://ws.unit06.user/data/IDataServices/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IDataServicesChannel : WSDataUser.IDataServices, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class DataServicesClient : System.ServiceModel.ClientBase<WSDataUser.IDataServices>, WSDataUser.IDataServices
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataServicesClient() : 
                base(DataServicesClient.GetDefaultBinding(), DataServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IDataServices.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(DataServicesClient.GetBindingForEndpoint(endpointConfiguration), DataServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<WSDataUser.Users[]> GetUsersAsync()
        {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Threading.Tasks.Task<WSDataUser.Users> GetOneUserAsync(string name)
        {
            return base.Channel.GetOneUserAsync(name);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(WSDataUser.Users user)
        {
            return base.Channel.CreateUserAsync(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(WSDataUser.Users user)
        {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<WSDataUser.Users> GetUserByIdAsync(int id)
        {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<WSDataUser.Users> GetUserByNameAndPassowrdAsync(string name, string passowrd)
        {
            return base.Channel.GetUserByNameAndPassowrdAsync(name, passowrd);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id)
        {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataServices))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDataServices))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:9090/DataServices.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataServicesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDataServices);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DataServicesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDataServices);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IDataServices,
        }
    }
}
